
/*------------------------------------*\
    $GRID
\*------------------------------------*/

// This is based on Philip Walton's flexbox grid system:
// https://github.com/philipwalton/solved-by-flexbox/blob/master/_sass/components/_grid.scss

// The build system for this project has Autoprefixer installed. Any property
// that needs a prefix will be handled at build time. So display: flex will be
// given the appropriate prefixes for -webkit and others. Autoprefixer can be
// customized (gruntfile.js) as to which browsers it supports.

// ====================================

// Styles for the inline-block (legacy) version of the grid from PureCss:
// http://blog.purecss.io/post/60789414532/how-we-improved-grids-in-pure-0-3-0

// These are styles for browsers that don't support flexbox - IE8 and IE9
// Once we drop support for these browsers, these styles can be removed

/*section*/.grid-section {
  margin-top: 2em;
}

$add-legacy-support: false !default;

@if $add-legacy-support == true{
    .grid {
        letter-spacing: -.31em;
        text-rendering: optimizespeed;
        font-family: FreeSans,Arimo,"Droid Sans",Helvetica,Arial,sans-serif;
    }

    /* Opera hack */
    .opera:-o-prefocus,
    .grid {
        word-spacing:-0.43em;
    }

    .grid-cell {
      display: inline-block; 
      letter-spacing: normal;
      word-spacing: normal;
      vertical-align: top;
      text-rendering: auto;
      //@include gotham-400;
    }
}

// ====================================

@if $add-legacy-support != true{

// 1. Creating a flexbox grid
// 2. Boxes wrap onto next row

.grid {
    display: flex; // [1]
    flex-wrap: wrap; // [2]
    list-style: none;
    // margin:0;
    // padding: 0;

    @include respond-min($medium){
      flex-wrap: nowrap;
    }
}

// Mobile grid is set to wrap, and set to nowrap at $medium.
// This is to allow us to set :first-child and :last-child negative
// margins on basic grids. If flex-wrap is required above medium
// use .grid--wrap

.grid--wrap {
  flex-wrap: wrap;
}

// Setting width to 100% defaults to full-width on mobile

.grid-cell {
    width: 100%;
    min-width: 1px;
    margin-top: 0; // cancelling out OWL
}

@include respond-min($medium) {
    .grid-cell {
        flex: 1;
    }

    .grid-cell:first-child {
      margin-left: -1em;
    }

    .grid-cell:last-child {
      margin-right: -1em;
    }
}

.grid--wrap .grid-cell:first-child {margin-left: 0;}
.grid--wrap .grid-cell:last-child {margin-right: 0; flex-grow: 0}

// .grid > .grid {
//     & > .grid-cell {
//         display: flex;
//     }
// }



// Aligns all cells
.grid--top {
    align-items: flex-start;
}

.grid--center {
    align-items: center;
}

.grid--bottom {
    align-items: flex-end;
}

// Reverse order of cells

.grid--reverse {
    flex-flow: row-reverse wrap;
}

// Aligns individual cells
.grid-cell--top {
    align-self: flex-start;
}

.grid-cell--center {
    align-self: center;
}

.grid-cell--bottom {
    align-self: flex-end;
}
}


@mixin grid-sizing($name: "") {
    $sep: "-";
    @if $name == "" {
        $sep: "";
    }
    .#{$name}#{$sep}grid--fit > .grid-cell {flex: 1;}
    .#{$name}#{$sep}grid--full > .grid-cell {flex: 0 0 100%;}
    .#{$name}#{$sep}grid--1-2 > .grid-cell {flex: 0 0 50%;}
    .#{$name}#{$sep}grid--1-3 > .grid-cell {flex: 0 0 33.3333%;}
    .#{$name}#{$sep}grid--1-4 > .grid-cell {flex: 0 0 25%;}
}

// Build the grid system

@include grid-sizing();

@each $breakpoint in $breakpoints {
    $name: nth($breakpoint, 1);
    $size: nth($breakpoint, 2);
    @media only screen and #{$size}{
        @include grid-sizing($name);
    }
}

// For Old IE
@if $add-legacy-support {
.grid--full > .grid-cell {width: 100%}
}

@mixin grid-pad($name: "") {
    $sep: "-";
    @if $name == "" {
        $sep: "";
    }
    .#{$name}#{$sep}grid-pad-\.5x {padding: .5em;}
    .#{$name}#{$sep}grid-pad-1x {padding: 1em;}
    .#{$name}#{$sep}grid-pad-1\.5x {padding: 1.5em;}
    .#{$name}#{$sep}grid-pad-2x {padding: 2em;}
    .#{$name}#{$sep}grid-pad-3x {padding: 3em;}

    // IF .grid--full is applied, remove the vertical padding between the stacked cells
    .grid--full .#{$name}#{$sep}grid-pad-\.5x {padding: 0 .5em;}
    .grid--full .#{$name}#{$sep}grid-pad-1x {padding: 0 1em;}
    .grid--full .#{$name}#{$sep}grid-pad-1\.5x {padding: 0 1.5em;}
    .grid--full .#{$name}#{$sep}grid-pad-2x {padding: 0 2em;}
    .grid--full .#{$name}#{$sep}grid-pad-3x {padding: 0 3em;}
}

@include grid-pad();

@if $add-legacy-support != true {
  @each $breakpoint in $breakpoints {
      $name: nth($breakpoint, 1);
      $size: nth($breakpoint, 2);
      @media only screen and #{$size}{
          @include grid-pad($name);
      }
  }
}

@if $add-legacy-support == true {
  @each $breakpoint in $breakpoints {
      $name: nth($breakpoint, 1);
      $size: nth($breakpoint, 2);
        @include grid-pad($name);
  }
}

  @mixin sizes($name: "") {
    $sep: "-";
    @if $name == "" {
      $sep: "";
    }

    @if $add-legacy-support != true{
      .u-#{$name}#{$sep}1-12  {flex-basis: 8.33333%;}
      .u-#{$name}#{$sep}2-12,
      .u-#{$name}#{$sep}1-6  {flex-basis: 16.66667%;}
      .u-#{$name}#{$sep}1-5   {flex-basis: 20%;}
      .u-#{$name}#{$sep}3-12,
      .u-#{$name}#{$sep}1-4  {flex-basis: 25%;}
      .u-#{$name}#{$sep}4-12,
      .u-#{$name}#{$sep}2-6,
      .u-#{$name}#{$sep}1-3  {flex-basis: 33.33333%;}
      .u-#{$name}#{$sep}2-5   {flex-basis: 40%;}
      .u-#{$name}#{$sep}5-12  {flex-basis: 41.66667%;}
      .u-#{$name}#{$sep}6-12,
      .u-#{$name}#{$sep}3-6
      .u-#{$name}#{$sep}2-4,
      .u-#{$name}#{$sep}1-2  {flex-basis: 50%;}
      .u-#{$name}#{$sep}7-12  {flex-basis: 58.33333%;}
      .u-#{$name}#{$sep}3-5   {flex-basis: 60%;}
      .u-#{$name}#{$sep}8-12,
      .u-#{$name}#{$sep}2-3,
      .u-#{$name}#{$sep}4-6  {flex-basis: 66.66667%;}
      .u-#{$name}#{$sep}9-12,
      .u-#{$name}#{$sep}3-4  {flex-basis: 75%;}
      .u-#{$name}#{$sep}4-5   {flex-basis: 80%;}
      .u-#{$name}#{$sep}10-12,
      .u-#{$name}#{$sep}5-6 {flex-basis: 83.33333%;}
      .u-#{$name}#{$sep}11-12 {flex-basis: 91.66667%;}
      .u-#{$name}#{$sep}12-12,
      .u-#{$name}#{$sep}6-6,
      .u-#{$name}#{$sep}5-5,
      .u-#{$name}#{$sep}4-4,
      .u-#{$name}#{$sep}3-3,
      .u-#{$name}#{$sep}2-2,
      .u-#{$name}#{$sep}1-1   {flex-basis: 100%;}
    };
  }

  // create global sizes
  @include sizes();

  // create sizes for each breakpoint
  @each $breakpoint in $breakpoints {
      $name: nth($breakpoint, 1);
      $size: nth($breakpoint, 2);
      @media only screen and #{$size}{
          @include sizes($name);
      }
  }

  @mixin sizes($name: "") {
    $sep: "-";
    @if $name == "" {
      $sep: "";
    }

    @if $add-legacy-support == true{
      .u-#{$name}#{$sep}1-12{width: 8.33%;}
      .u-#{$name}#{$sep}2-12,
      .u-#{$name}#{$sep}1-6{width: 16.67%;}
      .u-#{$name}#{$sep}1-5{width: 20%;}
      .u-#{$name}#{$sep}3-12,
      .u-#{$name}#{$sep}1-4{width: 25%;}
      .u-#{$name}#{$sep}4-12,
      .u-#{$name}#{$sep}2-6,
      .u-#{$name}#{$sep}1-3  {width: 33.33%;}
      .u-#{$name}#{$sep}2-5   {width: 40%;}
      .u-#{$name}#{$sep}5-12  {width: 41.67%;}
      .u-#{$name}#{$sep}6-12,
      .u-#{$name}#{$sep}3-6
      .u-#{$name}#{$sep}2-4,
      .u-#{$name}#{$sep}1-2  {width: 50%;}
      .u-#{$name}#{$sep}7-12  {width: 58.33%;}
      .u-#{$name}#{$sep}3-5   {width: 60%;}
      .u-#{$name}#{$sep}8-12,
      .u-#{$name}#{$sep}2-3,
      .u-#{$name}#{$sep}4-6  {width: 66.67%;}
      .u-#{$name}#{$sep}9-12,
      .u-#{$name}#{$sep}3-4  {width: 75%;}
      .u-#{$name}#{$sep}4-5   {width: 80%;}
      .u-#{$name}#{$sep}10-12,
      .u-#{$name}#{$sep}5-6 {width: 83.33%;}
      .u-#{$name}#{$sep}11-12 {width: 91.67%;}
      .u-#{$name}#{$sep}12-12,
      .u-#{$name}#{$sep}6-6,
      .u-#{$name}#{$sep}5-5,
      .u-#{$name}#{$sep}4-4,
      .u-#{$name}#{$sep}3-3,
      .u-#{$name}#{$sep}2-2,
      .u-#{$name}#{$sep}1-1   {width: 100%;}
    };
  }

  // create global sizes
  @include sizes();

  // create sizes for each breakpoint
  @each $breakpoint in $breakpoints {
      $name: nth($breakpoint, 1);
      $size: nth($breakpoint, 2);
        @include sizes($name);
  }
